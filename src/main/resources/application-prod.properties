# Désactiver complètement l'auto-configuration H2
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration

# Production PostgreSQL Configuration - Utiliser uniquement par notre config manuelle
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.type=org.springframework.jdbc.datasource.DriverManagerDataSource

# Dialecte PostgreSQL explicite pour Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Désactiver le chargement automatique des drivers
spring.datasource.driver-class-name-supplier=null
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false

# Server Configuration
server.port=${PORT:8080}

# Thymeleaf Configuration
spring.thymeleaf.cache=true

# Logging explicite pour diagnostiquer le problème
logging.level.root=INFO
logging.level.org.springframework.boot.autoconfigure=DEBUG
logging.level.org.hibernate=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
