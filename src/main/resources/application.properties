# Server Configuration
server.port=8080

# Development PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/travelapp
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Thymeleaf Configuration
spring.thymeleaf.cache=false

# OpenAPI/Swagger Configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# DeepSeek Configuration
deepseek.api.key=sk-a619899b1b514d7fbdafba91034d7712
deepseek.api.url=https://api.deepseek.com/v1/chat/completions
deepseek.model=deepseek-chat

# Groq Cloud Configuration
groq.api.url=https://api.groq.com/openai/v1/chat/completions
groq.api.key=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
groq.api.model=meta-llama/llama-4-scout-17b-16e-instruct

# Logging
logging.level.com.example.travelappv2.service=DEBUG
